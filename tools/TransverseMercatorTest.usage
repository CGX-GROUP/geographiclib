#define GEOGRAPHICLIB_VERSION "1.8"
#define PROGRAM_NAME "TransverseMercatorTest"

int usage(int retval, bool brief) {
  if (brief)
    ( retval ? std::cerr : std::cout ) << "Usage:\n\
    TransverseMercatorTest [ -r ] [ -s | -t ] [ --version | -h | --help ]\n\
\n\
For full documentation type:\n\
    TransverseMercatorTest --help\n\
or visit:\n\
    http://geographiclib.sf.net/html/TransverseMercatorTest.1.html\n";
  else
    ( retval ? std::cerr : std::cout ) << "Man page:\n\
NAME\n\
       TransverseMercatorTest -- convert between geographic and transverse\n\
       Mercator\n\
\n\
SYNOPSIS\n\
       TransverseMercatorTest [ -r ] [ -s | -t ] [ --version | -h | --help ]\n\
\n\
DESCRIPTION\n\
       Convert between geographic coordinates and transverse Mercator\n\
       coordinates.\n\
\n\
       Read lines with latitude and longitude (or easting and northing if -r\n\
       is specified) from standard input and print latitude, longitude,\n\
       easting, northing, convergence, and scale.  Units are decimal degrees\n\
       (or degrees, minutes, seconds) and meters.\n\
\n\
       By default, the WGS84 is ellipsoid is used (a = 6378137m, f =\n\
       1/298.257223563), with central meridian = 0, UTM central scale\n\
       (0.9996), and false easting and false northing = 0.  This is affected\n\
       by the -t option.\n\
\n\
OPTIONS\n\
       -r  perform the reverse projection; (the inputs are easting and\n\
           northing).\n\
\n\
       -s  use the sixth-order Krueger series approximation to the transverse\n\
           Mercator projection instead of the exact projection.\n\
\n\
       -t  use an ellipsoid of eccentricity 0.1, central scale = 1, 1/4\n\
           meridian = 1.  In addition, the cut in the exact transverse\n\
           Mercator projection at northing = 0 is removed.  The domain of\n\
           latitude (lat) and longitude (lon) is the union of\n\
\n\
               lat in [0, 90]  and lon in [0, 90]\n\
               lat in (-90, 0] and lon in [81, 90]\n\
\n\
           The domain of easting (x) and northing (y) is the union of\n\
\n\
               x in [0, inf)       and y in [0, 1]\n\
               x in [1.71..., inf) and y in (-inf, 0]\n\
\n\
       --version\n\
           print version.\n\
\n\
       -h  print usage.\n\
\n\
       --help\n\
           print full documentation.\n\
\n\
EXAMPLES\n\
          echo 0 90 | TransverseMercatorTest\n\
          => 0 90 25953592.84 9997964.94 90 18.40\n\
          echo 260e5 100e5 | TransverseMercatorTest -r\n\
          => -0.02 90.00 26000000 10000000 90.01 18.47\n\
\n\
ERRORS\n\
       An illegal line of input will print an error message to standard output\n\
       beginning with \"ERROR:\" and causes TransverseMercatorTest to return an\n\
       exit code of 1.  However, an error does not cause\n\
       TransverseMercatorTest to terminate; following lines will be converted.\n\
\n\
SEE ALSO\n\
       TransverseMercatorTest is a part of GeographicLib,\n\
       <http://geographiclib.sf.net>.  The algorithms for the transverse\n\
       Mercator projection are described in C. F. F. Karney, Transverse\n\
       Mercator with an accuracy of a few nanometers, J. Geod (2011); DOI\n\
       <http://dx.doi.org/10.1007/s00190-011-0445-3>; preprint\n\
       <http://arxiv.org/abs/1002.1417>.  The explanation of the domain of the\n\
       projection with the -t option is given in Section 5 of this paper.\n\
\n\
AUTHOR\n\
       TransverseMercatorTest was written by Charles Karney.\n\
";
    return retval;
}
