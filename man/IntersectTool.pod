=head1 NAME

IntersectTool -- perform rhumb line calculations

=head1 SYNOPSIS

B<IntersectTool> [ B<-c> | B<-n> | B<-i> | B<-o> |
[ B<-R> I<maxdist> ]
[ B<-e> I<a> I<f>] [ B<-E> ]
[ B<-w> ] [ B<-p> I<prec> ]
[ B<--comment-delimiter> I<commentdelim> ]
[ B<--version> | B<-h> | B<--help> ]
[ B<--input-file> I<infile> | B<--input-string> I<instring> ]
[ B<--line-separator> I<linesep> ]
[ B<--output-file> I<outfile> ]

=head1 DESCRIPTION

B<IntersectTool> finds the intersection of two geodesics I<X> and
I<Y>.  The geodesics may either be specified as a location and an
azimuth, I<latX> I<lonX> I<aziX>, or as the shortest geodesic segment
between two locations, I<latX1> I<lonX1> and I<latX2> I<lonX2>.  The
intersection is then specified as the displacements, I<x> and I<y>,
along the geodesics I<X> and I<Y> from the starting points to the
intersection.  In the case of the intersection of geodesic segments,
the starting point is first point specified for I<X> or I<Y>.

Usually this tool returns the I<closest> intersection defined as the
one that minimizes the "L1" distance, |I<x>| + |I<y>|.  However, it is
possible to specify an "origin" I<x0> and I<y0> when determining
closeness so that the intersection which minimizes |I<x> - I<x0>| +
|I<y> - I<y0>| is returned.

In the case of intersecting segments the origin is taken to be the
midpoints of the segments; I<x0> is half the distance from I<X1> to
I<X2>.  In addition a flag is returned specifying whether the
intersection is "within" the segments.

B<IntersectTool> operates in one of three modes:

=over

=item 1.

With the B<-c> option (the default), B<IntersectTool> accepts lines on
the standard input containing I<latX> I<lonX> I<aziX> I<latY> I<lonY>
I<aziY>, specifying two geodesic lines I<X> and I<Y>, and prints the
location of the closest intersection I<x> I<y> on standard output.

=item 2.

With the B<-n> option, B<IntersectTool> accepts lines on the standard
input containing I<latX> I<lonX> I<aziX> I<aziY> I<aziY>, specifying a
point where two geodesic lines I<X> and I<Y> intersect, and prints the
location of the next closest intersection I<x> I<y> on standard
output.

=item 3.

With the B<-i> option, B<IntersectTool> accepts lines on the standard
input containing I<latX1> I<lonX1> I<latX2> I<lonX2> I<latY1> I<lonY1>
I<latY2> I<lonY2>, specifying two geodesic segments I<X1>-I<X2> and
I<Y1>-I<Y2>, and prints a flag and the position of intersection I<k>
I<x> I<y> on standard output.  Here I<k> is a flag in [-4,4] specifying
whether the intersection is within the segments (0) or not (non-zero).
I<x> and I<y> give the distances from I<X1> and I<X2> respectively.

=item 4.

With the B<-o> option, B<IntersectTool> accepts lines on the standard
input containing I<latX> I<lonX> I<aziX> I<latY> I<lonY> I<aziY> I<x0>
I<y0>, specifying two geodesic lines I<X> and I<Y> and two offsets,
and prints the location of the intersection [I<x>, I<y>] closest to
[I<x0>, I<y0>] on standard output.

=back

=head1 OPTIONS

=over

=item B<-c>

find the closest intersection (see 1 above).

=item B<-n>

find the intersection closest to a given intersection (see 2 above).

=item B<-i>

find the intersection of two geodesic segments (see 3 above).

=item B<-o>

find the closest intersection with an offset.

=item B<-R> I<maxdist>

modifies the four modes to return all the intersections with an L1
distance, I<maxdist>, of the relevant origion: [0, 0] for B<-c> and
B<-n>, the midpoints of the segments for B<-i>, and [I<x0>, I<y0>] for
B<-o>.  Each intersection is preceded by its L1 distance and the
intersections are sorted by the distances.  A line "nan nan nan" is
added after the intersections, so that the output can be associated
with the correct lines of the input.

=item B<-C>

check the intersections.  For each computed intersection, print on
B<standard error> a line I<latX> I<lonX> I<latY> I<lonY> giving the
computed positions of the intersections points on I<X> and I<Y>.

=item B<-e> I<a> I<f>

specify the ellipsoid via the equatorial radius, I<a> and
the flattening, I<f>.  Setting I<f> = 0 results in a sphere.  Specify
I<f> E<lt> 0 for a prolate ellipsoid.  A simple fraction, e.g., 1/297,
is allowed for I<f>.  By default, the WGS84 ellipsoid is used, I<a> =
6378137 m, I<f> = 1/298.257223563.

=item B<-E>

By default, the geodesic calculations are carried out using series
expansions valid for |I<f>| E<lt> 0.01.  If B<-E> is supplied, exact
equations for geodesics are used; these are valid for arbitrary
eccentricities.

=item B<-w>

on input, longitude precedes latitude (except that on input this can
be overridden by a hemisphere designator, I<N>, I<S>, I<E>, I<W>).

=item B<-p> I<prec>

set the output precision to I<prec> (default 3); I<prec> is the
precision relative to 1 m.  See L</PRECISION>.

=item B<--comment-delimiter> I<commentdelim>

set the comment delimiter to I<commentdelim> (e.g., "#" or "//").  If
set, the input lines will be scanned for this delimiter and, if found,
the delimiter and the rest of the line will be removed prior to
processing and subsequently appended to the output line (separated by a
space).

=item B<--version>

print version and exit.

=item B<-h>

print usage and exit.

=item B<--help>

print full documentation and exit.

=item B<--input-file> I<infile>

read input from the file I<infile> instead of from standard input; a file
name of "-" stands for standard input.

=item B<--input-string> I<instring>

read input from the string I<instring> instead of from standard input.
All occurrences of the line separator character (default is a semicolon)
in I<instring> are converted to newlines before the reading begins.

=item B<--line-separator> I<linesep>

set the line separator character to I<linesep>.  By default this is a
semicolon.

=item B<--output-file> I<outfile>

write output to the file I<outfile> instead of to standard output; a
file name of "-" stands for standard output.

=back

=head1 INPUT

B<IntersectTool> measures all angles in degrees and all lengths in
meters.  On input angles (latitude, longitude, azimuth) can be as
decimal degrees or degrees, minutes, seconds.  For example, C<40d30>,
C<40d30'>, C<40:30>, C<40.5d>, and C<40.5> are all equivalent.  By
default, latitude precedes longitude for each point (the B<-w> flag
switches this convention); however either may be given first by
appending (or prepending) I<N> or I<S> to the latitude and I<E> or
I<W> to the longitude.  Azimuths are measured clockwise from north;
however this may be overridden with I<E> or I<W>.

For details on the allowed formats for angles, see the C<GEOGRAPHIC
COORDINATES> section of GeoConvert(1).

=head1 PRECISION

I<prec> gives precision of the output with I<prec> = 0 giving 1 m
precision, I<prec> = 3 giving 1 mm precision, etc.  I<prec> is the
number of digits after the decimal point for lengths.  For decimal
degrees, the number of digits after the decimal point is I<prec> + 5.
The minimum value of I<prec> is 0 and the maximum is 10.

=head1 ERRORS

An illegal line of input will print an error message to standard output
beginning with C<ERROR:> and causes B<IntersectTool> to return an exit code
of 1.  However, an error does not cause B<IntersectTool> to terminate;
following lines will be converted.

=head1 EXAMPLES

Route from JFK Airport to Singapore Changi Airport:

   echo 40:38:23N 073:46:44W 01:21:33N 103:59:22E |
   IntersectTool -i -: -p 0

   103:34:58.2 18523563 45921660958919

N.B. This is B<not> the route typically taken by aircraft because it's
considerably longer than the geodesic given by GeodSolve(1).

Waypoints on the route at intervals of 2000km:

   for ((i = 0; i <= 20; i += 2)); do echo ${i}000000;done |
   IntersectTool -L 40:38:23N 073:46:44W 103:34:58.2 -: -p 0

   40:38:23.0N 073:46:44.0W 0
   36:24:30.3N 051:28:26.4W 9817078307821
   32:10:26.8N 030:20:57.3W 18224745682005
   27:56:13.2N 010:10:54.2W 25358020327741
   23:41:50.1N 009:12:45.5E 31321269267102
   19:27:18.7N 027:59:22.1E 36195163180159
   15:12:40.2N 046:17:01.1E 40041499143669
   10:57:55.9N 064:12:52.8E 42906570007050
   06:43:07.3N 081:53:28.8E 44823504180200
   02:28:16.2N 099:24:54.5E 45813843358737
   01:46:36.0S 116:52:59.7E 45888525219677

=head1 SEE ALSO

GeoConvert(1), GeodSolve(1).

An online version of this utility is availbable at
L<https://geographiclib.sourceforge.io/cgi-bin/IntersectTool>.

=head1 SEE ALSO

GeoConvert(1).

=head1 AUTHOR

B<IntersectTool> was written by Charles Karney.

=head1 HISTORY

B<IntersectTool> was added to GeographicLib,
L<https://geographiclib.sourceforge.io>, in version 2.3.
